1. Стандартная бибилотека создана наиболее универсальной, поддерживающей баланс между скоростью и компактностью кода.
Кроме того она работает одинаково во всех системах, то есть переносима

2. У GitHub большой функционал. Можно задокументировать историю создания проекта и иметь возможность откатиться к одному из его прошлых состояний;
разрабатывать новые фичи в проекте, не теряя стабильную рабочую версию. Кроме того без GitHub непонятно, как вести совместную разработку так, чтобы изменения,
внесенные одним программистом, были видны остальным

3. Clone, Pull, Push, Stage, Commit, Discard, Merge, Revert, Reset, Rebase HEAD to

4. Отдельные ветки стоит создавать, когда уже есть рабочая версия проекта в master, а в новой ветке будет вестись разработка нового функционала проекта

5. duration, clock (например steady_clock), псевдонимы типичных интервалов (seconds)

6. Разница между merge и rebase HEAD to в построении более понятного лога во втором случае.
Взамен теряется информация о том, когда действительно началась разработка в новой ветке (могла и раньше)
